edition: 1.0.0
name: api-gateway-framework  
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "{{ access }}"

vars: # 全局变量
  region: "{{ region }}"

services:
  frontend: # 业务名称/模块名称
    component: fc # 组件名称
    actions:
      pre-deploy:
        - run: npm install
          path: ./frontend
        - run: npm run build
          path: ./frontend
        - plugin: website-fc
    props: # 组件的属性值
      region: ${vars.region}
      service:
        name: "{{ serviceName }}" #Docusaurus项目名称 如 frontend
        description: "Serverless Devs Website Service"
      function:
        name: "{{ frontendFunctionName }}"
        description: "Serverless Devs Website Docusaurus Function"
        codeUri: ./frontend/build
        timeout: 30
        memorySize: 512
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - DELETE
  backend: # 业务名称/模块名称
    # 如果只想针对 helloworld 下面的业务进行相关操作，可以在命令行中加上 helloworld，例如：
    # 只对helloworld进行构建：s helloworld build
    # 如果不带有 helloworld ，而是直接执行 s build，工具则会对当前Yaml下，所有和 helloworld 平级的业务模块（如有其他平级的模块，例如下面注释的next-function），按照一定顺序进行 build 操作
    component:  fc
    props:
      region: ${vars.region}              # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: 
        name: "{{ serviceName }}"
        description: 'hello world by serverless devs'
      function:
        name: "{{ backendFunctionName }}"
        description: 'hello FunctionCompute by serverless devs'
        runtime: nodejs14
        codeUri: ./backend
        handler: index.handler
        memorySize: 128
        timeout: 60
  api-gateway:
    component: api-gateway
    props:
      region: ${vars.region}
      instanceId: {{instanceId}} # 实例
      groupName: "{{ apiGroup }}" #组名 如 apiGroup
      #custom_domain: "" #自定义域名，选填
      apis: 
        - apiName: fc-event-index
          requestConfig: 
            requestPath: /web/*
          serviceConfig:
            servicePath: /*
            serviceAddress: ${frontend.output.url.system_url}
        - apiName: fc-event-api
          requestConfig:
            requestPath: /api/*
            requestProtocol: 'HTTP,HTTPS'
            requestHttpMethod: GET
            requestMode: MAPPING
            bodyFormat: STREAM
          serviceConfig:
            serviceProtocol: FunctionCompute
            functionComputeConfig: 
              fcType: FCEvent
              fcRegionId: ${vars.region}
              serviceName: {{serviceName}}
              functionName: {{backendFunctionName}}
              qualifier: LATEST
              roleArn: {{roleArn}}
